@model shareDoor.ViewModels.AdFormViewModel
@{
    ViewBag.Title = "AdForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("InsertAd", "Ads", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container">
        <h2>Εισαγωγή Αγγελίας</h2>
        <div class="alert alert-success" role="alert">Tα πεδία είναι με <span style="font-size:18px;">*</span>  είναι <strong>υποχρεωτικά.</strong> </div>
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-4 justify-content-center">
                <div class="form-group">

                    @Html.LabelFor(m => m.House.StateId)
                    @Html.DropDownListFor(m => m.House.StateId, new SelectList(Model.States, "Id", "Name"), "", new { @class = "form-control get-states" })
                    @Html.ValidationMessageFor(m => m.House.StateId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.AreaId)
                    @Html.DropDownListFor(m => m.House.AreaId, new SelectList(Model.Areas, "Id", "Name"), "", new { @class = "form-control get-areas" })
                    @Html.ValidationMessageFor(m => m.House.AreaId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Address)
                    @Html.TextBoxFor(m => m.House.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.Address)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.PostalCode)
                    @Html.TextBoxFor(m => m.House.PostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.PostalCode)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Level)
                    @Html.EnumDropDownListFor(m => m.House.Level, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.Level)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.RentCost)
                    @Html.TextBoxFor(m => m.House.RentCost, new { @class = "form-control", type = "number" })
                    @Html.ValidationMessageFor(m => m.House.RentCost)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.YearConstruct)
                    @Html.TextBoxFor(m => m.House.YearConstruct, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.YearConstruct)
                </div>

            </div>
            <div class="col-4 justify-content-center">
                <div class="form-group">
                    @Html.LabelFor(m => m.House.TotalRooms)
                    @Html.EnumDropDownListFor(m => m.House.TotalRooms, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.TotalRooms)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.SquareMeters)
                    @Html.TextBoxFor(m => m.House.SquareMeters, new { @class = "form-control", type = "number", min = "0", max = "200" })
                    @Html.ValidationMessageFor(m => m.House.SquareMeters)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Smoker, "Καπνιστής/ρια")
                    <div class="custom-radio">
                        @Html.LabelFor(m => m.House.Smoker, "Ναι")
                        @Html.RadioButtonFor(m => m.House.Smoker, "Yes", new { @class = "" })
                        @Html.LabelFor(m => m.House.Smoker, "Οχι", new { @class = "ml-2" })
                        @Html.RadioButtonFor(m => m.House.Smoker, "No", new { @class = "" })
                        @Html.LabelFor(m => m.House.Smoker, "Αδιάφορο", new { @class = "ml-2" })
                        @Html.RadioButtonFor(m => m.House.Smoker, "Default", new { @class = "", @checked="" })
                        @Html.ValidationMessageFor(m => m.House.Smoker)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Pets, "Κατοικίδια")
                    <div class="custom-radio">

                        @Html.LabelFor(m => m.House.Pets, "Ναι")
                        @Html.RadioButtonFor(m => m.House.Pets, "Yes", new { @class = "" })
                        @Html.LabelFor(m => m.House.Pets, "Οχι", new { @class = "ml-2" })
                        @Html.RadioButtonFor(m => m.House.Pets, "No", new { @class = "" })
                        @Html.LabelFor(m => m.House.Pets, "Αδιάφορο", new { @class = "ml-2" })
                        @Html.RadioButtonFor(m => m.House.Pets, "Default", new { @class = "", @checked = "" })
                        @Html.ValidationMessageFor(m => m.House.Pets)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Gender, "Φύλο")
                    <div class="custom-radio">
                        @Html.LabelFor(m => m.House.Gender, "Άνδρας")
                        @Html.RadioButtonFor(m => m.House.Gender, "Male", new { @class = "" })
                        @Html.LabelFor(m => m.House.Gender, "Γυναίκα", new { @class = "ml-2" })
                        @Html.RadioButtonFor(m => m.House.Gender, "Female", new { @class = "" })
                        @Html.LabelFor(m => m.House.Gender, "Αδιάφορο", new { @class = "ml-2" })
                        @Html.RadioButtonFor(m => m.House.Gender, "Default", new { @class = "" , @checked = "" })
                        @Html.ValidationMessageFor(m => m.House.Gender)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.House.Description)
                    @Html.TextAreaFor(m => m.House.Description, new { @class = "form-control", rows = "6", cols = "50" })
                    @Html.ValidationMessageFor(m => m.House.Description)
                </div>
                @Html.LabelFor(m => m.Files, "Φωτογραφίες")
                @Html.TextBoxFor(m => m.Files, new { type = "file", @multiple = "multiple" })

            </div>


        </div>

        <button class="btn btn-primary" type="submit">Save</button>
    </div>
}
@section scripts {
    <script>
        $(document).ready(function () {
            $(".get-states").change(function (e) {
                var Id = $(e.target).val()

                $.ajax({
                    url: "/api/ads/" + Id,
                })
                    .done(function (res) {
                        console.log(res);
                        $(".get-areas").empty();
                        for (var i = 0; i < res.length; i++) {
                            $(".get-areas").append(`<option value='${res[i].Id}'>` + res[i].Name + "</option>");
                        }

                    })
                    .fail(function () {

                    })
            })

        })


    </script>
}

@section styles{
    <style>
        .form-group > label {
            font-weight: bold;
        }
    </style>
}